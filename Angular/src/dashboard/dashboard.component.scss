.root{
  display: flex;
  flex-direction: column;
 // gap: 10px;
}
.main {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    width:100%;
    
  }
  .p-card-header--admin{
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    background-color: aquamarine !important;
   
  }
 .p-card-header--employee{
    display: flex !important;
    
    flex-direction: column !important;
    align-items: center !important;
    background-color: lightpink !important;
  
  }
  .employee-container--details{
    
    width: 700px !important;
  }
  .employee-container {
   // margin-right: 90px !important;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #f5f5f5;
  }
  .employee-container--pending-requests{
   align-self:baseline;
  //  align-items: center;
  padding-right: 30px;
justify-self:flex-start;

   // align-items: flex-start;
  }
  .header{
    background-color: #f3f2f2;
    justify-content: space-around;
  }
 h3{
    display: flex !important;
    justify-content: center !important;
  }
  .navigator{
    display: flex;
    gap: 5px;
  }

  .d-flex{
    display: flex;
    align-items: center;
  }
  .flex-col{
    display: flex;
    align-items: center;
    flex-direction: column;
  }

.justify-evenly{
  justify-content: space-evenly;
}

.text-align{
  text-align: left !important;
}
.dropdown-content {
  z-index: 1; /* Adjust as necessary */
  position: absolute; /* Ensure the z-index is applied */
  top: 80px; /* Position from the top edge of the containing block */
  left: 1155px; 
  height: 15rem;
  width: fit-content;
  row-gap: 15px;
  border-radius: 15px;
  background-color: rgba(222, 222, 222, 0.9);
  overflow-y: scroll;
 }
 
 .dropdown-content a {
  border-bottom: 2px solid #ccc; /* Add a bottom border to each item */
  padding: 10px; /* Add some padding to ensure the text is not too close to the border */
 }
 
 .dropdown-content a:last-child {
  border-bottom: none; /* Remove the border from the last item */
 }
.text-overflow {
  max-width: 45ch;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-x: hidden;
}  


.dropdown-icon:hover{
  border-radius: 15px;
  height: max-content;
  background-color: #bcbaba;
}

.custom-calendar ::ng-deep .mat-calendar {
  width: 300px; /* Adjust the width as needed */
  height: 300px; /* Adjust the height as needed */
  
 }

 .header--labels {
  display: flex;
  gap: 10px;
}
.labels--yellow-square {
  width: 15px;
  height: 15px;
  background-color: #efef65;
}
.labels--blue-square {
  background-color: #9595dc;
  width: 15px;
  height: 15px;
}
.content--main{
  width: 600px !important;

}


.main--message{
  width: 500px !important;
}


.read-row {
  background-color: red;
 }

.header--title{
  font-size: 40px;
}
/* Add this to your global stylesheet */
.custom-scrollbar::-webkit-scrollbar {
 width: 10px; /* Adjust the width of the scrollbar */
}

.custom-scrollbar::-webkit-scrollbar-track {
 background: #f1f1f1; /* Color of the track */
}

.custom-scrollbar::-webkit-scrollbar-thumb {
 background: #888; /* Color of the scroll thumb */
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
 background: #555; /* Color of the scroll thumb on hover */
}

/* Custom scrollbar for Firefox */
.custom-scrollbar {
 scrollbar-width: thin; /* 'thin' or 'auto' */
 scrollbar-color: #888 #f1f1f1; /* thumb and track color */
}

.logout--button{
  color : red !important;
}

.pending-requests--empty{

  width: max-content !important;
  height: 200px !important;
}

.animated-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 10px;
  background-color: #f9f9f9;
  animation: invert 2s infinite;
 }
 
 .animated-card i {
  font-size: 24px;
  margin-bottom: 10px;
 }
 
 @keyframes invert {
   0%, 100% {
     transform: translateY(0);
  }
   50% {
     transform: translateY(-10px);
  }
 }




svg {
  margin: auto;
  width: 150px;
  height: auto;
  display: block;
}
/* animate the svg to rotate from the center */
svg {
  animation: rotateHourglass 10s ease-in-out infinite;
  transform-origin: 50% 50%;
}
/* animate the rectangle describing the sand toward the bottom */
#sand {
  animation: moveSand 10s ease-in-out infinite;
}
/* by repeating the animation from the original values, the idea is to give the illusion of a constant rotation clockwise */
@keyframes rotateHourglass {
  /* 95% to fill the hourglass, 5% to rotate the shape around its center  */
  95% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
@keyframes moveSand {
  95%,
  100% {
    transform: translateY(50px);
  }
}

 